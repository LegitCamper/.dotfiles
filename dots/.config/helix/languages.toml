[[language]]
name = "python"
roots = ["pyproject.toml"]
scope = "source.py"
formatter = { command = "black", args = ["--quiet", "-"] }
indent = { tab-width = 4, unit = "    " }
language-servers = ["ruff"]
auto-format = true

[[language]]
name = "rust"
formatter = { command = "clippy" }
language-servers = ["rust-analyzer", "typos"]
injection-regex = "rust"
indent = { tab-width = 4, unit = "    " }
roots = ["Cargo.lock"]
scope = "source.rs"
file-types = ["rs"]
auto-format = true

[[language]]
name = "c"
scope = "source.c"
injection-regex = "c"
file-types = ["c"]
comment-token = "//"
language-servers = ["clangd"]
auto-format = true
formatter = { command = "clang-format" }
indent = { tab-width = 2, unit = "  " }

[[language]]
name = "go"
scope = "source.go"
injection-regex = "go"
file-types = ["go"]
roots = ["go.work", "go.mod"]
auto-format = true
comment-token = "//"
language-servers = ["gopls", "golangci-lint-lsp"]
# TODO: gopls needs utf-8 offsets?
indent = { tab-width = 4, unit = "\t" }

[[language]]
name = "toml"
# formatter = { command = "taplo", args = ["format"] }
file-types = ["toml"]
scope = "text.toml"
comment-token = "#"
auto-format = true

[[language]]
name = "nix"
formatter = { command = "nixfmt" }
file-types = ["nix", "flake"]
roots = ["flake.lock"]
scope = "source.nix"
comment-token = "#"
auto-format = true

[[language]]
name = "yaml"
scope = "source.yaml"
file-types = ["yml", "yaml"]
comment-token = "#"
indent = { tab-width = 2, unit = "  " }
auto-format = true
formatter = { command = 'prettier', args = ["--parser", "yaml"] }
language-servers = ["yaml", "ansible"]
injection-regex = "yml|yaml"

[[language]]
name = "lua"
formatter = { command = "lua-format" }
language-servers = ["lua"]
file-types = ["lua"]
scope = "source.lua"
comment-token = "--"
auto-format = true

[[language]]
name = "just"
scope = "source.just"
file-types = ["justfile", "Justfile", ".justfile", ".Justfile"]
injection-regex = "just"
comment-token = "#"
indent = { tab-width = 4, unit = "    " }
# auto-format = true
# formatter = { command = "just", args = ["--dump"] } # Please see: https://github.com/helix-editor/helix/issues/9703

[language-server.rust-analyzer]
command = "rust-analyzer"
# command = "rustup"
# args = [
#   "run",
#   "stable",
#   "rust-analyzer",
# ]
[language-server.rust-analyzer.config]
inlayHints.bindingModeHints.enable = false
inlayHints.closingBraceHints.minLines = 10
inlayHints.closureReturnTypeHints.enable = "with_block"
inlayHints.discriminantHints.enable = "fieldless"
inlayHints.lifetimeElisionHints.enable = "skip_trivial"
inlayHints.typeHints.hideClosureInitialization = false
procMacro = { ignored = { leptos_macro = [
  # Optional:
  # "component",
  "server",
] } }

[language-servers.lua]
command = "lua-language-server"

[language-server.ansible]
command = "ansible-language-server"
args = ["--stdio"]

[language-server.yaml]
command = "yaml-language-server"
args = ["--stdio"]

[language-server.taplo]
command = "taplo"
args = ["lsp", "stdio"]

[language-server.ruff]
command = "ruff-lsp"

[language-server.gopls]
command = "gopls"
[language-server.gopls.config.hints]
assignVariableTypes = true
compositeLiteralFields = true
constantValues = true
functionTypeParameters = true
parameterNames = true
rangeVariableTypes = true

[language-server.golangci-lint-lsp]
command = "golangci-lint-langserver"
[language-server.golangci-lint-lsp.config]
command = [
  "golangci-lint",
  "run",
  "--out-format",
  "json",
  "--issues-exit-code=1",
]

[language-server.typos]
# typos-lsp must be on your PATH, or otherwise change this to an absolute path to typos-lsp
command = "typos-lsp"
# Logging level of the language server. Defaults to error.
# Run with helix -v to output LSP logs to the editor log (:log-open)
environment = { "RUST_LOG" = "error" }
# Custom config. Used together with a config file found in the workspace or its parents,
# taking precedence for settings declared in both. Equivalent to the typos `--config` cli argument.
config.config = "~/code/typos-lsp/crates/typos-lsp/tests/typos.toml"
# How typos are rendered in the editor, can be one of an Error, Warning, Info or Hint.
# Defaults to Warning.
config.diagnosticSeverity = "Warning"

[[grammar]]
name = "just"
source = { git = "https://github.com/IndianBoy42/tree-sitter-just", rev = "8af0aab79854aaf25b620a52c39485849922f766" }
