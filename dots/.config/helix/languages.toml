[[language]]
name = "python"
scope = "source.python"
injection-regex = "py(thon)?"
file-types = [
  "py",
  "pyi",
  "py3",
  "pyw",
  "ptl",
  "rpy",
  "cpy",
  "ipy",
  "pyt",
  { glob = ".python_history" },
  { glob = ".pythonstartup" },
  { glob = ".pythonrc" },
  { glob = "*SConstruct" },
  { glob = "*SConscript" },
  { glob = "*sconstruct" },
]
shebangs = ["python", "uv"]
roots = ["pyproject.toml", "setup.py", "poetry.lock", "pyrightconfig.json"]
comment-token = "#"
language-servers = ["ruff", "jedi", "pylsp"]

[[language]]
name = "rust"
formatter = { command = "clippy" }
language-servers = ["rust-analyzer", "typos"]
injection-regex = "rust"
indent = { tab-width = 4, unit = "    " }
roots = ["Cargo.lock"]
scope = "source.rs"
file-types = ["rs"]
auto-format = true

[[language]]
name = "c"
scope = "source.c"
injection-regex = "c"
file-types = ["c"]
comment-token = "//"
language-servers = ["clangd", "typos"]
auto-format = true
formatter = { command = "clang-format" }
indent = { tab-width = 2, unit = "  " }

[[language]]
name = "go"
scope = "source.go"
injection-regex = "go"
file-types = ["go"]
roots = ["go.work", "go.mod"]
auto-format = true
comment-token = "//"
language-servers = ["gopls", "golangci-lint-lsp", "typos"]
# TODO: gopls needs utf-8 offsets?
indent = { tab-width = 4, unit = "\t" }

[[language]]
name = "temp"
scope = "source.templ"
injection-regex = "templ"
file-types = ["templ"]
roots = ["go.work", "go.mod"]
auto-format = true
comment-token = "//"
language-servers = ["templ", "typos"]
indent = { tab-width = 4, unit = "\t" }

[[language]]
name = "toml"
# formatter = { command = "taplo", args = ["format"] }
file-types = ["toml"]
scope = "text.toml"
comment-token = "#"
auto-format = true

[[language]]
name = "nix"
formatter = { command = "nixfmt" }
file-types = ["nix", "flake"]
roots = ["flake.lock"]
scope = "source.nix"
comment-token = "#"
auto-format = true

[[language]]
name = "yaml"
scope = "source.yaml"
file-types = ["yml", "yaml", "typos"]
comment-token = "#"
indent = { tab-width = 2, unit = "  " }
auto-format = true
formatter = { command = 'prettier', args = ["--parser", "yaml"] }
language-servers = ["yaml", "ansible"]
injection-regex = "yml|yaml"

[[language]]
name = "lua"
formatter = { command = "lua-format" }
language-servers = ["lua"]
file-types = ["lua"]
scope = "source.lua"
comment-token = "--"
auto-format = true

[[language]]
name = "just"
scope = "source.just"
file-types = ["justfile", "Justfile", ".justfile", ".Justfile"]
injection-regex = "just"
comment-token = "#"
indent = { tab-width = 4, unit = "    " }
# auto-format = true
# formatter = { command = "just", args = ["--dump"] } # Please see: https://github.com/helix-editor/helix/issues/9703

[[language]]
name = "typst"
scope = "source.typst"
injection-regex = "typ(st)?"
file-types = ["typst", "typ"]
comment-token = "//"
block-comment-tokens = { start = "/*", end = "*/" }
language-servers = ["tinymist", "typos"]
indent = { tab-width = 2, unit = "  " }
formatter = { command = "typstyle" }
auto-format = true

[language-servers]
tinymist = { command = "tinymist" }
lua = { command = "lua-language-server" }
ruff = { command = "ruff", args = ["server"] }
pylsp = { command = "pylsp" }
taplo = { command = "taplo", args = ["lsp", "stdio"] }
yaml = { command = "yaml-language-server", args = ["--stdio"] }
ansible = { command = "ansible-language-server", args = ["--stdio"] }
templ = { command = ["templ", "lsp"] }

[language-server.rust-analyzer]
command = "rust-analyzer"
[language-server.rust-analyzer.config]
inlayHints.bindingModeHints.enable = false
inlayHints.closingBraceHints.minLines = 10
inlayHints.closureReturnTypeHints.enable = "with_block"
inlayHints.discriminantHints.enable = "fieldless"
inlayHints.lifetimeElisionHints.enable = "skip_trivial"
inlayHints.typeHints.hideClosureInitialization = false
[language-server.rust-analyzer.config.check]
targets = ["x86_64-unknown-linux-gnu"]

[language-server.typos]
command = "typos-lsp"
environment = { "RUST_LOG" = "info" }
config.diagnosticSeverity = "Warning"

[language-server.gopls]
command = "gopls"
[language-server.gopls.config.hints]
assignVariableTypes = true
compositeLiteralFields = true
constantValues = true
functionTypeParameters = true
parameterNames = true
rangeVariableTypes = true

[language-server.golangci-lint-lsp]
command = "golangci-lint-langserver"
[language-server.golangci-lint-lsp.config]
command = [
  "golangci-lint",
  "run",
  "--out-format",
  "json",
  "--issues-exit-code=1",
]
