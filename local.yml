---
# THIS SCRIPT IS INTENDED TO BE RAN INSIDE A TOOLBOX CONTAINER
- hosts: localhost
  connection: local

  tasks:
    - name: Check if nix is installed
      ansible.builtin.raw: | 
        source ~/.nix-profile/etc/profile.d/nix.sh 
        which nix-env
      check_mode: false
      changed_when: false
      failed_when: which_nix.rc > 1
      register: which_nix

    - name: install nix package manager
      when: which_nix.rc != 0
      shell: |
        sh <(curl -L https://nixos.org/nix/install) --no-daemon
        source ~/.nix-profile/etc/profile.d/nix.sh 
        # switch to stable repo
        nix-channel --remove nixpkgs
        nix-channel --add https://nixos.org/channels/nixos-23.11 nixpkgs
        nix-channel --update

    - name: packages declaration
      set_fact:
        packages:
          # cli
          - git
          - openssh
          - wget
          - unzip
          - fd
          - stow
          - fish
          - htop
          - yazi
          - jq
          - fzf
          - entr
          - diffutils
          - zellij
          - helix
          - lazygit
          - eza
          - ripgrep
          - starship
          - macchina
          - zoxide
          - bat
          - ripgrep
          # languages
          - python3
          - go
          # build tools
          - pkg-config
          - ninja
          - gcc
          - gnumake
          - cmake
          # lsps
          - lldb
          - gopls
          - prettierd
          - taplo
          - lua-language-server
          - luaformatter
          - yaml-language-server
          - ansible-language-server

    - name: install nix packages
      environment:
        NIXPKGS_ALLOW_UNFREE: 1
      with_items:
        - "{{ packages}}"
      loop_control:
        loop_var: package
      shell: |
        source ~/.nix-profile/etc/profile.d/nix.sh 
        nix-env -iA nixpkgs.{{ package }}

    - name: create projects folder (if not exist)
      file:
        path: ~/projects
        state: directory

    - name: clone .dotfile
      git:
        repo: "https://github.com/LegitCamper/.dotfiles.git"
        dest: ~/projects/.dotfiles
        clone: yes
        update: no

    - name: stow dotfiles
      shell: |
        stow -t ~ --adopt -S dots
      check_mode: false
      changed_when: false
      failed_when: false

    - name: copy and decrypt keys (if needed)
      with_items:
        - src: ./dots/ssh_key
          dest: ~/.ssh/id_ed25519
        - src: ./dots/ssh_key.pub
          dest: ~/.ssh/id_ed25519.pub
      loop_control:
        loop_var: ssh_file
      copy:
        src: "{{ ssh_file.src }}"
        dest: "{{ ssh_file.dest }}"
        decrypt: yes
        owner: sawyer
        group: sawyer
        mode: 0600
