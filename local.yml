--- 
- hosts: localhost
  connection: local
  become: true

  tasks:
  - block: # packages
    - name: install packages arch
      when: ansible_distribution in [ "Archlinux" ]
      package:
        name:
          # window manager
          - ttf-jetbrains-mono-nerd
          - hyprland
          - waybar
          - greetd
          - greetd-tuigreet
          - flameshot
          - pulseaudio
          - kvantum
          - lxqt-qtplugin
          - papirus-icon-theme
          - lxappearance
          - dolphin
          - pavucontrol
          - blueman
          - swayidle
          - swaybg
          - wofi
          - dunst
          - playerctl
          - waybar
          - grim
          - slurp
          - wl-clipboard
          - socat
          - brightnessctl
          - moreutils # sponge...
          - efibootmgr
          - usbutils # lsusb
          - grub-btrfs

          # Networking tools
          - networkmanager
          - network-manager-applet
          - inetutils # hostname ping ifconfig...
          - dnsutils # dig nslookup...
          - bridge-utils # brctl
          - nmap
  
          # apps
          - bitwarden
          - dolphin
          - ark
          - kate
          - gwenview
          - kcalc
          - rhythmbox
          - socat
          - qemu
          - libreoffice
          - vlc
          - ffmpeg
          - procs
          - solaar
          - discord
          - vivaldi
          - vivaldi-ffmpeg-codecs
          - obsidian
  
          # gaming
          - lutris
  
          # cli
          - yay
          - unzip
          - wget
          - fd
          - stow
          - alacritty
          - fish
          - bash
          - upower
          - htop
          - yt-dlp
          - jq
          - fzf
          - git
          # rust cli tools
          - eza
          - ripgrep
          - zellij
          - macchina
          - starship
          - zoxide
          - helix
  
          # dev
          # languages
          - npm
          - ninja
          - gcc
          - cmake
          - jre8 
          - python3
          - go
          - rust
          # language servers
          - ansible-language-server
          - lua-language-server
          - luaformatter 
          - taplo # toml lsp
          # tools 
          - neovim
          - lazygit
          - lazydocker
          - wireshark-qt
          - docker
          - docker-compose

    - name: install packages aur
      when: ansible_distribution in [ "Archlinux" ]
      package:
        use: yay
        name:
          - aura
          - xboxdrv
          - floorp
          - heroic-games-launcher 
          - gamescope-git
          - steamtinkerlaunch
          - minecraft-launcher
  
    - name: install packages debian
      when: ansible_distribution in [ "Debian", "Pop!_OS", "Ubuntu" ]
      package:
        name:
          - None

    - name: install packages opensuse
      when: ansible_distribution in [ "OpenSuse" ]
      package:
        name:
          - None

    - name: set display manager
      become_user: root
      systemd_service:
        name: greetd
        state: started
        enabled: true

    - name: login manaer
      become_user: root
      shell: |
        cat "[default_session]" > /etc/greetd/config.toml
        cat 'command = "/bin/tuigreet --time --asterisks --user-menu --cmd Hyprland "' >> /etc/greetd/config.toml
          
  - block: # stow dotfiles
    - name: create projects folder (if not exist)
      become_user: sawyer
      file:
        path: ~/projects
        state: directory
        owner: sawyer
        group: sawyer
        
    - name: copy .dotfiles
      become_user: sawyer
      copy:
        src: ~/.ansible/tmp/.dotfiles
        dest: ~/projects/.dotfiles
  
    - name: stow dotfiles
      become_user: sawyer
      shell: bash -c '~/projects/.dotfiles/.stow.sh'
  
    - name: copy and decrypt keys (if needed)
      become_user: sawyer
      copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        decrypt: yes
        owner: sawyer
        group: sawyer
        mode: 0600
      loop:
        - src: ssh_key
          dest: ~/.ssh/id_ed25519
        - src: ssh_key.pub
          dest: ~/.ssh/id_ed25519.pub

  - block: # system snapshots (btfs)
    - name: set snapper snapshot limits
      shell: |
        cat 'ALLOW_USERS="sawyer"' > /etc/snapper/configs/root
        cat 'TIMELINE_MIN_AGE="1800"' >> /etc/snapper/configs/root
        cat 'TIMELINE_LIMIT_HOURLY="5"' >> /etc/snapper/configs/root
        cat 'TIMELINE_LIMIT_DAILY="7"' >> /etc/snapper/configs/root
        cat 'TIMELINE_LIMIT_WEEKLY="0"' >> /etc/snapper/configs/root
        cat 'TIMELINE_LIMIT_MONTHLY="0"' >> /etc/snapper/configs/root
        cat 'TIMELINE_LIMIT_YEARLY="0"' >> /etc/snapper/configs/root

    - name: update grub with new snapshot entries
      systemd_service:
        name: grub-btrfs.path 
        state: started
        enabled: true

    - name: snapper-timeline
      systemd_service:
        name: snapper-timeline
        state: restarted
        enabled: true

    - name: snapper-cleanup
      systemd_service:
        name: snapper-cleanup
        state: restarted
        enabled: true
          
  - block: # setup auto updater
    - name: add ansible user
      user: name=ansible uid=900

    - name: install cron job (ansible-pull)
      cron: user="ansible" name="ansible provision" minute="*/10" job="/usr/bin/ansible-pull -o -U https://github.com/LegitCamper/.dotfiles.git > /dev/null"
  
  
