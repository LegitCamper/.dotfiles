---
- name: set gtk theme
  become_user: sawyer
  shell: |
    gsettings set org.gnome.desktop.interface gtk-theme \
    "Catppuccin-Macchiato-Standard-Lavender-Dark"

- name: set icon theme
  become_user: sawyer
  shell: |
    gsettings set org.gnome.desktop.interface icon-theme "Papirus-Dark"

- name: create projects folder (if not exist)
  become_user: sawyer
  file:
    path: ~/projects
    state: directory

- name: clone .dotfile
  become_user: sawyer
  git:
    repo: "https://github.com/LegitCamper/.dotfiles.git"
    dest: ~/projects/.dotfiles
    clone: yes
    update: no

- name: stow dotfiles
  become_user: sawyer
  shell: |
    stow -t ~ --adopt -S dots
    exit 0
  args:
    executable: /bin/bash

- name: copy and decrypt keys (if needed)
  become_user: sawyer
  with_items:
    - src: ./dots/ssh_key
      dest: ~/.ssh/id_ed25519
    - src: ./dots/ssh_key.pub
      dest: ~/.ssh/id_ed25519.pub
  loop_control:
    loop_var: ssh_file
  copy:
    src: "{{ ssh_file.src }}"
    dest: "{{ ssh_file.dest }}"
    decrypt: yes
    owner: sawyer
    group: sawyer
    mode: 0600

- name: get virtmanager config state
  shell: grep -Fxq "Configured by me! - ansible" \
    /etc/libvirt/libvirtd.conf
  register: virtmanger_config_state
  ignore_errors: true
- name: virtmanger config
  when: virtmanger_config_state.rc == 1
  become: true
  vars:
    conf_path: /etc/libvirt/libvirtd.conf
  shell: |
    echo '#Below - Configured by me!' >> /etc/libvirt/libvirtd.conf
    echo 'unix_sock_group = "libvirt"' >> /etc/libvirt/libvirtd.conf
    echo 'unix_sock_rw_perms = "0770"' >> /etc/libvirt/libvirtd.conf
  args:
    executable: /bin/bash

- name: login manager config
  become: true
  vars:
    conf_path: /etc/greetd/config.toml
  shell: |
    if ! grep -Fxq "Hyprland" {{ conf_path }}; then
      cat /home/sawyer/projects/.dotfiles/tasks/files/greetd_config.toml \
      >> {{ conf_path }}
    fi
  args:
    executable: /bin/bash

- name: configure u2f as alternative athentication method
  become: true
  with_items:
    - sudo
    - greetd
  loop_control:
    loop_var: u2f_file
  shell: |
    if ! grep -qs "pam_u2f" /etc/pam.d/{{ u2f_file }}; then
        u2f="auth sufficient pam_u2f.so cue origin=pam://$(hostname) appid=pam://$(hostname)"
        sed -i "2i$u2f" /etc/pam.d/{{ u2f_file }}
        sed -i -e 's/required/include/g' /etc/pam.d/{{ u2f_file }}
        sed -i -e 's/requisite/include/g' /etc/pam.d/{{ u2f_file }}
    fi
  args:
    executable: /bin/bash

- name: replace line for btrfs timeshift conf
  lineinfile:
    path: /usr/lib/systemd/system/grub-btrfsd.service
    regexp: "^ExecStart"
    line: "ExecStart=/usr/bin/grub-btrfsd --syslog --timeshift-auto"
    backrefs: yes

- name: rebuild grub conf
  become: true
  shell: grub-mkconfig -o /boot/grub/grub.cfg
