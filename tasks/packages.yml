---
- name: packages declaration
  set_fact:
    packages:
      window_manager:
        - ttf-jetbrains-mono-nerd
        - hyprland
        - xdg-desktop-portal-hyprland
        - waybar
        - greetd
        - greetd-tuigreet
        - lxqt-qtplugin
        - papirus-icon-theme
        - lxappearance
        - dolphin
        - pavucontrol
        - blueman
        - swayidle
        - swaybg
        - wofi
        - dunst
        - grim
        - slurp
        - wl-clipboard
        - socat
        - brightnessctl
        - efibootmgr
        - usbutils # lsusb
        - inotify-tools # dep for grub-btrfs
        - timeshift
        - grub-btrfs
        - udisks2
        - udiskie
        - pam-u2f
      networking_tools:
        - networkmanager
        - network-manager-applet
        - inetutils # hostname ping ifconfig...
        - dnsutils # dig nslookup...
        - bridge-utils # brctl
        - nmap
      apps:
        - bitwarden
        - dolphin
        - ark
        - socat
        - ffmpeg
        - procs
        - discord
        - vivaldi
        - vivaldi-ffmpeg-codecs
      gaming:
        - gamescope
        - lutris
        - steam
      cli:
        - unzip
        - wget
        - fd
        - stow
        - alacritty
        - fish
        - bash
        - upower
        - htop
        - yt-dlp
        - yazi
        - poppler
        - ripgrep
        - jq
        - fzf
        - git
        - eza
        - ripgrep
        - starship
        - zoxide
        - bat
        - entr
      dev:
        qemu:
          - virt-manager
          - virt-viewer
          - qemu
        languages:
          - npm
          - ninja
          - gcc
          - cmake
          - jdk-openjdk
          - python3
          - python-pip
          - prettier
          - go
          - rust
        language_servers:
          - clang
          - gopls
          - rust-analyzer
          - ansible-language-server
          - lua-language-server
          - yaml-language-server
          - taplo # toml lsp
        tools:
          - base-devel
          - lldb # c+rust debug adpater
          - zellij
          - helix
          - neovim
          - lazygit
          - wireshark-qt
          - docker
          - docker-compose
    aur_packages:
      - aur-auto-vote-git
      - pyprland
      - xpadneo-dkms # xbox controller support
      - proton-ge-custom-bin
      - aura-bin
      - floorp-bin
      - heroic-games-launcher-bin
      - steamtinkerlaunch
      - minecraft-launcher
      - macchina-bin
      - lua-format
      - clang-format-static-bin
      - lazydocker-bin
      - catppuccin-gtk-theme-macchiato
      - qt5-styleplugins
      - timeshift-autosnap

- name: enable multilib repo
  when: ansible_distribution in [ "Archlinux" ]
  shell: |
    cp /etc/pacman.conf /etc/pacman.conf.backup
    mline=$(grep -n "\\[multilib\\]" /etc/pacman.conf | cut -d: -f1)
    rline=$(($mline + 1))
    sed -i ''$mline's|#\[multilib\]|\[multilib\]|g' /etc/pacman.conf
    sed -i ''$rline's|#Include = /etc/pacman.d/mirrorlist|Include = /etc/pacman.d/mirrorlist|g' /etc/pacman.conf

- name: install missing/new packages arch
  when: ansible_distribution in [ "Archlinux" ]
  with_items:
    - "{{ packages.window_manager }}"
    - "{{ packages.networking_tools }}"
    - "{{ packages.apps }}"
    - "{{ packages.gaming }}"
    - "{{ packages.cli }}"
    - "{{ packages.dev.tools }}"
    - "{{ packages.dev.qemu }}"
    - "{{ packages.dev.languages }}"
    - "{{ packages.dev.language_servers }}"
  loop_control:
    loop_var: package
  package:
    name: "{{ package }}"

- shell: yay -V
  register: yay_installed
  ignore_errors: true
- name: Install yay
  when:
    - ansible_distribution in [ "Archlinux" ]
    - yay_installed.rc == 0
  shell: |
    cd /opt/
    git clone https://aur.archlinux.org/yay-bin.git
    chown aur_builder yay-bin 
    cd yay-bin
    su aur_builder -c "makepkg -si --noconfirm"

- name: Install aur packages with yay via aur plugin
  when: ansible_distribution in [ "Archlinux" ]
  become_user: aur_builder
  kewlfft.aur.aur:
    state: present
    use: yay
    name: "{{ aur_packages }}"

- name: install packages debian
  when: ansible_distribution in [ "Debian", "Pop!_OS", "Ubuntu" ]
  package:
    name:
      - None

- set_fact:
    packages_installed: true
