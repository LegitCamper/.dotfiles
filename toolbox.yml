---
# THIS SCRIPT IS INTENDED TO BE RAN INSIDE A TOOLBOX CONTAINER
- hosts: localhost
  connection: local
  ignore_unreachable: true
  vars_files:
    - packages.yml

  pre_tasks:
    - name: Check if nix is installed
      ansible.builtin.raw: | 
        source ~/.nix-profile/etc/profile.d/nix.sh 
        which nix-env
      check_mode: false
      changed_when: false
      failed_when: false
      register: which_nix

    - name: create projects folder (if not exist)
      file:
        path: ~/projects
        state: directory

    - name: create ssh directory (if not exist)
      file:
        path: ~/.ssh
        state: directory

  tasks:
    - name: install nix package manager
      when: which_nix.rc != 0
      shell: sh <(curl -L https://nixos.org/nix/install) --no-daemon
      args:
        executable: /bin/bash

    # This should be a handler but I dont want to make a role file :(
    - name: add nix repos
      when: which_nix.rc != 0
      shell: |
        source ~/.nix-profile/etc/profile.d/nix.sh 
        nix-channel --add https://nixos.org/channels/nixos-23.11 stable
        nix-channel --add https://nixos.org/channels/nixos-unstable unstable
        nix-channel --update

    - name: install nix packages
      environment:
        NIXPKGS_ALLOW_UNFREE: 1
      with_items:
        - "{{ dev.nix.cli }}"
        - "{{ dev.nix.lsps }}"
      loop_control:
        loop_var: package
      shell: |
        source ~/.nix-profile/etc/profile.d/nix.sh 
        nix-env -iA stable.{{ package }}

    - name: install ubuntu packages
      when: ansible_os_family == "Ubuntu"
      with_items:
        - "{{ build.ubuntu.languages}}"
        - "{{ build.ubuntu.build-tools }}"
      loop_control:
        loop_var: package
      package:
        name: "{{ package }}"

    - name: clone .dotfile
      git:
        repo: "https://github.com/LegitCamper/.dotfiles.git"
        dest: ~/projects/.dotfiles
        clone: yes
        update: no

    - name: stow dotfiles
      shell: stow -t ~ --adopt -S dots
      check_mode: false
      changed_when: false
      failed_when: false

    - name: copy and decrypt keys (if needed)
      with_items:
        - src: ./dots/ssh_key
          dest: ~/.ssh/id_ed25519
        - src: ./dots/ssh_key.pub
          dest: ~/.ssh/id_ed25519.pub
      loop_control:
        loop_var: ssh_file
      copy:
        src: "{{ ssh_file.src }}"
        dest: "{{ ssh_file.dest }}"
        decrypt: yes
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_id }}"
        mode: 0600
